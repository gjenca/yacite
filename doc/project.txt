SOURCES
-------

yacite read *datadir*
	reads all records from *datadir*, outputs YAML

bib2yaml [ *bibfile* ]
	reads BibTeX from *bibfile* or from standard input, outputs YAML
	
	OPTIONS:
	  -s, --scopus         correct broken BibTeX produced by SCOPUS
	  -a, --keep-abstract  keep abstract
	  -n, --no-titlecase   by default, if the value of journal, title,
	    series or booktitle is in ALL CAPS it is converted to titlestring.
	    this option supresses this behaviour

SINKS
-----
yacite merge [-h] [-u UNAME] [-s SNAME] [-d DNAME] [-v] [-q] *datadir*

positional arguments:
  *datadir*		directory containing individual files with YAML
  			records

optional arguments:
  -h, --help            show this help message and exit
  -u UNAME, --union UNAME
                        take union of lists - original and new
  -s SNAME, --set SNAME
                        replace orginal values by new value
  -d DNAME, --delete-field DNAME
                        delete field
  -v, --verbose         be verbose
  -q, --quiet           be quiet

reads YAML from stdin, merges into *datadir*
merge means this:
	- for each newrecord in *stdin*
		- determine how many records in *datadir* are "very similar"
		  to newrecord, that means
		  one of the following:
			- same key
			- same year,title,authors
			- same journal name,volume,startpage 
			- same article-id
		- if there is no record in datadir very similar to newrecord, then
		  CREATE a new file as follows:
		  - generate a new key field in newrecord (if not present)
		  - create a new file in datadir. The filename of the new file is 
		     - *datadir*/*year*/*key*.yaml, if the boolean-valued
		       field newrecord[myown] is not true or not present
		     - *datadir*/myown/*year/*key*.yaml if newrecord[myown] is
		       true.
		- if there is exacly one record in datadir very similar to
		  newrecord, then UPDATE the record in *datadir* with values from
		  newrecord according to the following rules
		  ... TODO

yacite render *template*
	reads YAML from stdin, renders using the jinja2 *template*


FILTERS
-------

yacite filter *python expression*
	reads YAML from stdin
	outputs YAML, only the bibitems that are evaluated as TRUE.
	options: only myown, only not myown, import modules

yacite exec *python code*
	reads YAML from stdin
	executes python code for every bibitem
	outputs YAML

yacite append *name* *string*
	reads YAML from stdin
	it is assumed that every *name* points to a "list of strings",
	the new string is appended to the list,
	if there is no name, a singleton list is created
	outputs YAML

yacite unappend *name* *string*
	inverse of append


